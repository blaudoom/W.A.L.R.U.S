package fi.blaudoom.pentestgui;

import fi.blaudoom.pentestgui.dao.ThymeleafTemplateRepository;
import fi.blaudoom.pentestgui.model.ThymeleafTemplate;
import org.springframework.stereotype.Component;
import org.thymeleaf.IEngineConfiguration;
import org.thymeleaf.spring6.templateresolver.SpringResourceTemplateResolver;
import org.thymeleaf.templatemode.TemplateMode;
import org.thymeleaf.templateresolver.ClassLoaderTemplateResolver;
import org.thymeleaf.templateresolver.StringTemplateResolver;
import org.thymeleaf.templateresource.ITemplateResource;

import java.nio.charset.StandardCharsets;
import java.util.Map;
@Component
public class ThymeleafTemplateResolver extends StringTemplateResolver {

    private final ThymeleafTemplateRepository thymeleafTemplateRepository;

    public ThymeleafTemplateResolver(ThymeleafTemplateRepository thymeleafTemplateRepository) {
        this.thymeleafTemplateRepository = thymeleafTemplateRepository;
    }

    @Override
    public ITemplateResource computeTemplateResource(IEngineConfiguration configuration, String ownerTemplate, String template, Map<String, Object> templateResolutionAttributes) {
        ThymeleafTemplate thymeleafTemplate = thymeleafTemplateRepository.findByName(template);
        if(thymeleafTemplate != null){
            String templateString = thymeleafTemplate.getTemplate();
            if(templateString != null){
                return super.computeTemplateResource(configuration, ownerTemplate, templateString, templateResolutionAttributes);
            }
        }
        if(thymeleafTemplate == null){
            ClassLoaderTemplateResolver fileTemplateResolver = new ClassLoaderTemplateResolver();
            fileTemplateResolver.setPrefix("templates/");
            fileTemplateResolver.setSuffix(".html");
            fileTemplateResolver.setTemplateMode(TemplateMode.HTML);
            fileTemplateResolver.setCharacterEncoding(StandardCharsets.UTF_8.name());
            return fileTemplateResolver.resolveTemplate(configuration, ownerTemplate, template, templateResolutionAttributes).getTemplateResource();
        }
        return null;
    }
}
